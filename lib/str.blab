
##
## Str, make strings
##

str {
   aaa = "a"+

   super {
      pre = "lase" | "qua" | "tyranno" | "phase" | "alie" | "gun"
      post = "rator" | "ron" | "rex" | "nator" | "zilla"
      hero = pre post
   }

   # check for some silly string handling issues
   silly 
      = "%n" | "%x" | "%X" | "%P"                  # format string issues? %n's usually lead to crash
      | "\\x00" | "\\u0000" | "%00" | 192 128      # unexpected null termination after quoting or bad utf-8
      | "\\x0a" | "\\u000a" | "%0a" | 10 | 192 138 # unexpected line breaking (real, quoted or utf-8)
      | "%2F" | "\\x2F" | 192 175                  # path confusion with a quoted or bad utf-8 slash?
      | "\\n" | "\\b"                              # unexpected plain quoting?
      | "%55%72%72"                                # null via double url decoding?
      | "ATD*99#" | "ATZ" | "ATH" | "ATKTHXBY3"
      

   string = super.hero | "a"+ | "a"* | (silly ("" | " "))+ | unicode.text | rfc-2047

   null-terminated-string = string 0

   greek {
      lc = [α-ώ]
      uc = [Α-Ω]
      word = lc {1,10}
      uword = uc lc {0,9}
      sentence = uword (" " word){0,15} "."
      text = sentence (" " sentence){1,10}
   }

   rfc-2047 = 
    "=?" [a-z]{0,5} "?" ("q" | "r" | [a-z]{1,2}) "?" [a-z=_0-9]* "?="
      
   lambda {
      var = "a" | "b" | "c" | "d" | "e" | "f"
      abs = "λ" var+ "." (app | var | var)
      app = "(" term " " term ")"
      term = app | abs | var
   }

   logic {
      s = 32
      rel = "(" term s relation s term ")"
      relation = "→" | "↔" | "∧" | "∨"
      term = rel
           | var | var
           | "¬" term
           | ("∀" | "∃") var var-defn ":" s term
      var = "a" | "b" | "c" | "d" | "e" | "f"
      var-defn = "" | s "∈" s ("N" | "R")

      clause = term ("," term)* " ⊢ " term
             | term
   }

}
