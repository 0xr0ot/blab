
blab = blab.Gram

blab {

   Gram  = (Rhs | Defn) W ((Dict | Defn) W)*
   W     = "" | ("" | ("" | Wchar*))
   N     = "" | 10 # likely newline
   S     = Wchar+
   Wchar = 10 | 9 | 32
   Defn  = Name W "=" W Rhs N
   Label = [a-zA-Z] [a-z0-9-]* ("" | ("." Label))
   Name  = [a-zA-Z] [a-z0-9-]*
   Byte  = ("1" | "") [0-9]{2} | "2" [0-4][0-9] | "25" [0-5]
   Str   = "\"" Char* "\""
   Char  = [a-z]        # any valid UTF-8 sequence really
   Dict  = Name W "{" W Gram W "}" W
   Num   = [0-9]+
   CharC = "[" ((Char "-" Char) | Char)+ "]"
   Rhs   = Byte 
         | Label
         | Str 
         | CharC
         | Rhs S Rhs
         | "(" W Rhs W ")"
         | Rhs W "|" W Rhs
         | Rhs W "*"
         | Rhs W "+"
         | Rhs W "{" W Num W "}" S        # == A{n} = {n,n}
         | Rhs W "{" W Num W "," W Num W "}" S # {n,m}, n <= m
}
